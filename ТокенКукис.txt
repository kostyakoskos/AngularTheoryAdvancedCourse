Сначала были кукис, но не очень безопасны.
Появился токен, который вырабатвыется на сервере.

Авторизаия - говорит что вы можете делать. Например, попытка взять какую функцию админа.
Аунтетификация - это кто вы. Например, вы вводите логин и пароль.

Пользователь вводит логин и пароль. Сервер смотрит в бд. Сервер создает сессиию. Для этой сессии генерируется уникальный id. Потом сервер генерирует http cookie и возвращает ответ клиенту.
Клиент отправляет куки со значением сессии при каждом последующем запросе. Сервер валидирует id сессии и на основании этого дает или нет доступ к запрашиваемому ресурсу.
Когда пользователь выходит из системы сервер чистит все сессии и удаляет куки из браузера.

Сессии хранятся в бд или в кэше. 

Токен:
1. Пользователь вводит логин пароль
2. сервер проверяет наличие пользователя в бд
3. Сервер генерирует и подписывает секретным ключом токен.
4. Токен отправляется от сервера к клиенту 
Пользователь сохраняет токен на своей стороне.
При каждом запросе пользователь отправляет заголовок со заголовок с токеном
5. Сервер получил токен. Сервер проверяет подпись
6. Удаляется токен, когда пользователь выходит из системы.
Токен ещё валидный после выхода пользователя из системы.

В браузере токены хранятся в localstorage или sessionstorage, httponlycookie.

Токены хранятся на стороне клиента. Сервер просто проверяет подпись. 

Виды токенов:
1. Access - очень короткое время жизни (15 мин). Сделано чтобы обеспечить безопасность. 
2. Refresh - время жизни 1 год и тд. Нужен чтобы генерировать Access токен, чтобы пользователь не логировался каждые 15 минут.

Уязвимы к XSS атакам. 

JWT JSON WEB TOKENS- стандарт токенов. Симметричная подпись. Состоит из 3-х блоков(2-й это данные, 3-й это подпись). Хранить конфиденциальную(пароли) информацию в токенах нельзя, т.к. он расшифровывается легко,base64. 
В токенах хранят набор прав для конкретного пользователя и его идентификатор.
sha-256 алгоритм + первые 2 блока. Секретный ключ хранится только на сервере.
Как проверяют токены? Пользщовательприсылает токен(который состоит из 3-х частей). Смотрим на 3-ю часть. Если она совпадает с шифрованием, нашим, то все ок.

Сессии vs токены.
Если произошла утечка токенов, сервер может только изменить секретный ключ.
Сессии: 
Клиент -> Сервер -> база данных(тут сверяем id сессии)
Токены:
Клиент -> Сервер(тут сверяется то что прислал клиент и то что должно быть).
Сессии не могут использоваться между разными доменными именами.
Сесси завязаны для работы с куки. 









